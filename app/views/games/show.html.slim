= turbo_stream_from "games:#{@game.id}:users:#{current_user.id}"

- if @game.started?
  main.game-view
    section.gf-panel.gf-panel--large-header-row.board-view
      .gf-panel__panel-header.gf-panel__panel-header--large
        = link_to games_path do
          span.material-symbols-outlined.icon--x-large.icon--weight-bold arrow_back
        span.gf-emphasis = @game.name
      .gf-panel__panel-body.gf-panel__panel-body--players
        span.gf-emphasis Players:
        .accordion-group
          - @game.go_fish.players.each do |player|
            details.accordion
              summary
                span.material-symbols-outlined.accordion__marker arrow_right
                .flex.justify-between
                  - if player.user_id == current_user.id
                    span.gf-emphasis = player.name
                  - else
                    span = player.name

                  .flex.gap-xl
                    span
                      |> Cards:
                      span.gf-emphasis = player.hand.size
                    span
                      |> Books:
                      span.gf-emphasis = player.books.size

              .card-tray.card-tray--border-top
                .card-row.card-row--accordion
                  - if player.user_id == current_user.id
                    - player.hand.each do |card|
                      = image_tag "#{card.rank.downcase}-#{card.suit.downcase}.svg", alt: "#{card.rank} of #{card.suit}"
                  - else
                    - player.hand.each do |card|
                      = image_tag "back-card.svg", alt: "#{card.rank} of #{card.suit}"
                .card-row.card-row--accordion-books
                  - player.books.each do |book|
                    - card = book.cards.first
                    = image_tag "#{card.rank.downcase}-#{card.suit.downcase}.svg", alt: "#{card.rank} of #{card.suit}"


    section.gf-panel.gf-panel--large-header-row.feed-view
      .gf-panel__panel-header.justify-between
        span.gf-emphasis Game Feed
        .badge-primary.badge--with-border #{@game.go_fish.current_player.name}'s Turn
      .gf-panel__panel-body.gf-panel__panel-body--feed
        .notification-feed
          - if @game.go_fish.winner
            - if current_user.id == @game.go_fish.round_results.last.current_player.user_id
              - context = :player
            - else
              - context = :others
            .notification
              span = @game.go_fish.round_results.last.messages_for(context)['game_over']

          - @game.go_fish.round_results&.reverse.each do |round_result|
            - if current_user.id == round_result.current_player.user_id
              - context = :player
            - elsif current_user.id == round_result.opponent.user_id
              - context = :opponent
            - else
              - context = :others

            - messages = round_result.messages_for(context)

            .notification.notification--action
              span = messages['action']
            .notification-feed__reply
              span.material-symbols-outlined.icon--x-large.icon--weight-semi-bold subdirectory_arrow_right
              .notification.notification--response
                span.gf-emphasis = messages['response']
            .notification-feed__reply
              span.material-symbols-outlined.icon--x-large.icon--weight-semi-bold subdirectory_arrow_right
              .notification.notification--feedback
                span.gf-emphasis = messages['feedback']
            - if messages['book']
              .notification-feed__reply
                span.material-symbols-outlined.icon--x-large.icon--weight-semi-bold subdirectory_arrow_right
                .notification.notification--feedback
                  span.gf-emphasis = messages['book']

        = form_for @game, url: game_rounds_path(@game), method: :post, html: { class: "action-choices" } do |f|
          .action-choices__input-collection
            .form-group.flex-grow-1
              = label_tag :opponent_id, "Player", class: "form-label"
              = select_tag :opponent_id, options_for_select(@game.go_fish.players.reject { |player| player.user_id == current_user.id }.map { |player| [player.name, player.user_id] }), class: "form-control form-control--small"

            .form-group.flex-grow-1
              span.form-label Card Rank
              .rank-buttons(data-controller="rank-selector")
                = hidden_field_tag :rank, '', data: { "rank-selector-target": 'input' }
                - @game.go_fish.players.find { |player| player.user_id == current_user.id }.hand.map { |card| card.rank }.uniq.each do |rank|
                  = button_tag rank, class: "btn rank-button btn--small", data: { action: 'click->rank-selector#select', "rank-selector-target": 'button', rank: rank }

          - if @game.go_fish.current_player.user_id == current_user.id && @game.go_fish.winner.nil?
            = f.submit "Ask for Cards", class: "btn-primary"
          - else
            = f.submit "Ask for Cards", class: "btn-primary", disabled: true

    - player = @game.go_fish.players.find { |player| player.user_id == current_user.id }
    section.gf-panel.hand-view
      .gf-panel__panel-header
        span.gf-emphasis Your Hand
      .card-tray
        .card-row
          - player = @game.go_fish.players.find { |player| player.user_id == current_user.id }
          - player.hand.each do |card|
                = image_tag "#{card.rank.downcase}-#{card.suit.downcase}.svg", alt: "#{card.rank} of #{card.suit}"

    section.gf-panel.book-view
      .gf-panel__panel-header
        span.gf-emphasis Your Books
      .card-tray
        .card-row.card-row--your-books
          - player.books.each do |book|
            - card = book.cards.first
            = image_tag "#{card.rank.downcase}-#{card.suit.downcase}.svg", alt: "#{card.rank} of #{card.suit}"

- else
  main.game-view
    section.gf-panel.gf-panel--large-header-row.board-view
      .gf-panel__panel-header.gf-panel__panel-header--large
        = link_to games_path do
          span.material-symbols-outlined.icon--x-large.icon--weight-bold arrow_back
        span.gf-emphasis = @game.name
      .gf-panel__panel-body.gf-panel__panel-body--players
        span.gf-emphasis Waiting for Players...
        span #{@game.users.count}/#{@game.required_player_count} Players
        ul
          - @game.users.each do |user|
            li = user.name

    section.gf-panel.gf-panel--large-header-row.feed-view
      .gf-panel__panel-header.justify-between
        span.gf-emphasis Game Feed
        .badge-primary.badge--with-border Waiting
      .gf-panel__panel-body.gf-panel__panel-body--feed

    section.gf-panel.hand-view
      .gf-panel__panel-header
        span.gf-emphasis Your Hand
      .card-tray

    section.gf-panel.book-view
      .gf-panel__panel-header
        span.gf-emphasis Your Books
      .card-tray